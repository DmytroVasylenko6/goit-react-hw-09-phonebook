{"version":3,"sources":["components/common/Section/Section.js","components/common/Section/Section.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/common/Input/Input.js","components/common/Input/Input.module.css","fadeNotification.module.css","components/Notification/Notification.module.css","components/Notification/Notification.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","components/LoginForm/LoginForm.module.css","components/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js"],"names":["Section","title","children","appear","style","styles","s","titlePhonebook","titleContacts","className","section","in","timeout","classNames","unmountOnExit","join","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Input","name","label","id","placeholder","type","onChange","pattern","htmlFor","input","Notification","text","color","blueColor","redColor","notification","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","node","classes","split","forEach","c","element","classList","remove","setAttribute","baseVal","CSSTransition","_React$Component","_this","_len","arguments","args","_key","call","apply","this","concat","appliedClasses","enter","exit","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","props","onEntering","_this$resolveArgument2","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","nodeRef","current","getClassNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_inheritsLoose","_proto","prototype","phase","scrollTop","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","active","render","_this$props","_objectWithoutPropertiesLoose","React","createElement","Transition","_extends","Component","defaultProps","propTypes","LoginForm","useState","email","setEmail","password","setPassword","message","setMessage","alert","setAlert","dispatch","useDispatch","error","useSelector","authSelectors","getErrorMessage","errorStatus","getErrorStatus","setTimeout","authActions","onLogin","useCallback","state","authOperations","logIn","handleInputChange","target","visibleMessage","stringMessage","fadeNotification","onSubmit","e","preventDefault","form","Button","LoginPage"],"mappings":"yOAMe,SAASA,EAAT,GAAsD,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAC3CC,EAAQ,CAAY,cADwC,EAATC,OACjBC,IAAEC,eAAiBD,IAAEE,eAG7D,OACE,0BAASC,UAAWH,IAAEI,QAAtB,UACE,cAAC,IAAD,CAAgBC,IAAI,EAAMR,OAAQA,EAAQS,QAAU,IAAKC,WAAYP,IAAGQ,eAAa,EAArF,SACGb,GAAS,oBAAIQ,UAAWI,IAAWT,EAAMW,KAAK,MAArC,SAA6Cd,MAExDC,O,oBCdPc,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,cAAgB,+BAA+B,OAAS,wBAAwB,aAAe,gC,+ECGtL,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,8DIoCvFC,IAtCf,YASI,IARFC,EAQC,EARDA,KACAC,EAOC,EAPDA,MACAP,EAMC,EANDA,MACAQ,EAKC,EALDA,GACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,KACAC,EAEC,EAFDA,SACAC,EACC,EADDA,QAEA,OACE,wBAAOC,QAASL,EAAInC,UAAWH,IAAEqC,MAAjC,UACGA,EACD,uBACEG,KAAMA,EACNJ,KAAMA,EACNN,MAAOA,EACPQ,GAAIA,EACJC,YAAaA,EACbE,SAAUA,EACVtC,UAAWH,IAAE4C,MACbF,QAASA,S,oBCvBjBhC,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,uB,oBCAvDD,EAAOC,QAAU,CAAC,MAAQ,gCAAgC,YAAc,sCAAsC,KAAO,+BAA+B,WAAa,uC,oBCAjKD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,UAAY,gCAAgC,SAAW,iC,iHCG5G,SAASkC,EAAT,GAAwC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACrCC,EAAYhD,IAAEgD,UACdC,EAAWjD,IAAEiD,SAEbnD,EAAQ,CAACE,IAAEkD,cAUjB,MARc,QAAVH,GACFjD,EAAM+B,KAAKoB,GAGC,SAAVF,GACFjD,EAAM+B,KAAKmB,GAIX,mBAAG7C,UAAWI,IAAWT,EAAMW,KAAK,MAApC,SACGqC,M,iECpBP,SAASK,EAAiBC,EAAWC,GACnC,OAAOD,EAAUE,QAAQ,IAAIC,OAAO,UAAYF,EAAgB,YAAa,KAAM,MAAMC,QAAQ,OAAQ,KAAKA,QAAQ,aAAc,I,6BCelIE,EAAc,SAAqBC,EAAMC,GAC3C,OAAOD,GAAQC,GAAWA,EAAQC,MAAM,KAAKC,SAAQ,SAAUC,GAC7D,ODdyC1D,ECcb0D,QDdIC,ECcVL,GDbZM,UACVD,EAAQC,UAAUC,OAAO7D,GACa,kBAAtB2D,EAAQ3D,UAExB2D,EAAQ3D,UAAYgD,EAAiBW,EAAQ3D,UAAWA,GAExD2D,EAAQG,aAAa,QAASd,EAAiBW,EAAQ3D,WAAa2D,EAAQ3D,UAAU+D,SAAW,GAAI/D,KAP1F,IAAqB2D,EAAS3D,MCwFzCgE,EAA6B,SAAUC,GAGzC,SAASD,IAGP,IAFA,IAAIE,EAEKC,EAAOC,UAAUxC,OAAQyC,EAAO,IAAIzD,MAAMuD,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC/ED,EAAKC,GAAQF,UAAUE,GAgHzB,OA7GAJ,EAAQD,EAAiBM,KAAKC,MAAMP,EAAkB,CAACQ,MAAMC,OAAOL,KAAUI,MACxEE,eAAiB,CACrBjF,OAAQ,GACRkF,MAAO,GACPC,KAAM,IAGRX,EAAMY,QAAU,SAAUC,EAAWC,GACnC,IAAIC,EAAwBf,EAAMgB,iBAAiBH,EAAWC,GAC1D1B,EAAO2B,EAAsB,GAC7BE,EAAYF,EAAsB,GAEtCf,EAAMkB,cAAc9B,EAAM,QAE1BY,EAAMmB,SAAS/B,EAAM6B,EAAY,SAAW,QAAS,QAEjDjB,EAAMoB,MAAMR,SACdZ,EAAMoB,MAAMR,QAAQC,EAAWC,IAInCd,EAAMqB,WAAa,SAAUR,EAAWC,GACtC,IAAIQ,EAAyBtB,EAAMgB,iBAAiBH,EAAWC,GAC3D1B,EAAOkC,EAAuB,GAG9BnD,EAFYmD,EAAuB,GAEhB,SAAW,QAElCtB,EAAMmB,SAAS/B,EAAMjB,EAAM,UAEvB6B,EAAMoB,MAAMC,YACdrB,EAAMoB,MAAMC,WAAWR,EAAWC,IAItCd,EAAMuB,UAAY,SAAUV,EAAWC,GACrC,IAAIU,EAAyBxB,EAAMgB,iBAAiBH,EAAWC,GAC3D1B,EAAOoC,EAAuB,GAG9BrD,EAFYqD,EAAuB,GAEhB,SAAW,QAElCxB,EAAMkB,cAAc9B,EAAMjB,GAE1B6B,EAAMmB,SAAS/B,EAAMjB,EAAM,QAEvB6B,EAAMoB,MAAMG,WACdvB,EAAMoB,MAAMG,UAAUV,EAAWC,IAIrCd,EAAMyB,OAAS,SAAUZ,GACvB,IACIzB,EADyBY,EAAMgB,iBAAiBH,GAClB,GAElCb,EAAMkB,cAAc9B,EAAM,UAE1BY,EAAMkB,cAAc9B,EAAM,SAE1BY,EAAMmB,SAAS/B,EAAM,OAAQ,QAEzBY,EAAMoB,MAAMK,QACdzB,EAAMoB,MAAMK,OAAOZ,IAIvBb,EAAM0B,UAAY,SAAUb,GAC1B,IACIzB,EADyBY,EAAMgB,iBAAiBH,GAClB,GAElCb,EAAMmB,SAAS/B,EAAM,OAAQ,UAEzBY,EAAMoB,MAAMM,WACd1B,EAAMoB,MAAMM,UAAUb,IAI1Bb,EAAM2B,SAAW,SAAUd,GACzB,IACIzB,EADyBY,EAAMgB,iBAAiBH,GAClB,GAElCb,EAAMkB,cAAc9B,EAAM,QAE1BY,EAAMmB,SAAS/B,EAAM,OAAQ,QAEzBY,EAAMoB,MAAMO,UACd3B,EAAMoB,MAAMO,SAASd,IAIzBb,EAAMgB,iBAAmB,SAAUH,EAAWC,GAC5C,OAAOd,EAAMoB,MAAMQ,QAAU,CAAC5B,EAAMoB,MAAMQ,QAAQC,QAAShB,GACzD,CAACA,EAAWC,IAGhBd,EAAM8B,cAAgB,SAAU3D,GAC9B,IAAIjC,EAAa8D,EAAMoB,MAAMlF,WACzB6F,EAA2C,kBAAf7F,EAE5B8F,EAAgBD,EAAqB,IAD5BA,GAAsB7F,EAAaA,EAAa,IAAM,IACZiC,EAAOjC,EAAWiC,GAGzE,MAAO,CACL6D,cAAeA,EACfC,gBAJoBF,EAAqBC,EAAgB,UAAY9F,EAAWiC,EAAO,UAKvF+D,cAJkBH,EAAqBC,EAAgB,QAAU9F,EAAWiC,EAAO,UAQhF6B,EAtHTmC,YAAerC,EAAeC,GAyH9B,IAAIqC,EAAStC,EAAcuC,UA6D3B,OA3DAD,EAAOjB,SAAW,SAAkB/B,EAAMjB,EAAMmE,GAC9C,IAAIxG,EAAYyE,KAAKuB,cAAc3D,GAAMmE,EAAQ,aAG7CJ,EADsB3B,KAAKuB,cAAc,SACLI,cAE3B,WAAT/D,GAA+B,SAAVmE,GAAoBJ,IAC3CpG,GAAa,IAAMoG,GAKP,WAAVI,GAEFlD,GAAQA,EAAKmD,UAGXzG,IACFyE,KAAKE,eAAetC,GAAMmE,GAASxG,EAhOzB,SAAkBsD,EAAMC,GAC/BD,GAAQC,GAAWA,EAAQC,MAAM,KAAKC,SAAQ,SAAUC,GAC7D,OCXsC1D,EDWb0D,QCXIC,EDWVL,GCVTM,UAAWD,EAAQC,UAAU8C,IAAI1G,GCFhC,SAAkB2D,EAAS3D,GACxC,OAAI2D,EAAQC,YAAoB5D,GAAa2D,EAAQC,UAAU+C,SAAS3G,IACkC,KAAlG,KAAO2D,EAAQ3D,UAAU+D,SAAWJ,EAAQ3D,WAAa,KAAK4G,QAAQ,IAAM5G,EAAY,KDA9B6G,CAASlD,EAAS3D,KAA6C,kBAAtB2D,EAAQ3D,UAAwB2D,EAAQ3D,UAAY2D,EAAQ3D,UAAY,IAAMA,EAAe2D,EAAQG,aAAa,SAAUH,EAAQ3D,WAAa2D,EAAQ3D,UAAU+D,SAAW,IAAM,IAAM/D,KADxR,IAAkB2D,EAAS3D,KD2OpC8G,CAAUxD,EAAMtD,KAIpBsG,EAAOlB,cAAgB,SAAuB9B,EAAMjB,GAClD,IAAI0E,EAAwBtC,KAAKE,eAAetC,GAC5C6D,EAAgBa,EAAsBC,KACtCb,EAAkBY,EAAsBE,OACxCb,EAAgBW,EAAsBtF,KAC1CgD,KAAKE,eAAetC,GAAQ,GAExB6D,GACF7C,EAAYC,EAAM4C,GAGhBC,GACF9C,EAAYC,EAAM6C,GAGhBC,GACF/C,EAAYC,EAAM8C,IAItBE,EAAOY,OAAS,WACd,IAAIC,EAAc1C,KAAKa,MAEnBA,GADI6B,EAAY/G,WACRgH,YAA8BD,EAAa,CAAC,gBAExD,OAAoBE,IAAMC,cAAcC,IAAYC,YAAS,GAAIlC,EAAO,CACtER,QAASL,KAAKK,QACdW,UAAWhB,KAAKgB,UAChBF,WAAYd,KAAKc,WACjBI,OAAQlB,KAAKkB,OACbC,UAAWnB,KAAKmB,UAChBC,SAAUpB,KAAKoB,aAIZ7B,EAvLwB,CAwL/BqD,IAAMI,WAERzD,EAAc0D,aAAe,CAC3BtH,WAAY,IAEd4D,EAAc2D,UAiIT,GACU3D,O,oBG1ZfzD,EAAOC,QAAU,CAAC,KAAO,0B,2MCSV,SAASoH,IAAa,IAAD,EAERC,mBAAS,IAFD,mBAE3BC,EAF2B,KAEpBC,EAFoB,OAGFF,mBAAS,IAHP,mBAG3BG,EAH2B,KAGjBC,EAHiB,OAIJJ,mBAAS,IAJL,mBAI3BK,EAJ2B,KAIlBC,EAJkB,OAKRN,mBAAS,MALD,mBAK3BO,EAL2B,KAKpBC,EALoB,KAO5BC,EAAWC,cACXC,EAAQC,YAAYC,IAAcC,iBAClCC,EAAcH,YAAYC,IAAcG,gBAG1CD,GACCE,YAAW,WACXR,EAASS,IAAYH,aAAY,MAC/B,KAGP,IAAMI,EAAUC,uBAAY,SAACC,GAAD,OAAWZ,EAASa,IAAeC,MAAMF,MAAS,CAACZ,IAGzEe,EAAoB,SAAC,GAAiC,IAAD,IAA9BC,OAAUrH,EAAoB,EAApBA,KAAMN,EAAc,EAAdA,MAE9B,UAATM,EAKS,aAATA,GACFgG,EAAYtG,GALboG,EAASpG,IAoCJ4H,EAAiB,SAACC,GACxBrB,EAAWqB,GACTnB,GAAS,GACTS,YAAW,WACTT,GAAS,KACR,KACHS,YAAW,WACTX,EAAW,MACV,MAIP,OACM,qCACO,cAACnE,EAAA,EAAD,CAAe9D,GAAIkI,GAASQ,EAAazI,QAAS,IAAMC,WAAYqJ,IAAkBpJ,eAAa,EAAnG,SACI,cAACqC,EAAA,EAAD,CAAcC,KAAkB,KAAZuF,EAAiBM,EAAQN,EAAStF,MAAM,UAE/D,uBAAM8G,SA3CE,SAAAC,GACnBA,EAAEC,iBAGY,KAAV9B,GAA6B,KAAbE,EAKP,KAAVF,EAIa,KAAbE,GAKFgB,EAAQ,CAAElB,QAAOE,aAEjBD,EAAS,IACVE,EAAY,KAPXsB,EAAe,0BAJfA,EAAe,uBALdA,EAAe,qCAsCwBvJ,UAAWH,IAAEgK,KAA3C,UAEI,cAAC7H,EAAA,EAAD,CACEE,MAAM,QACNG,KAAK,QACLJ,KAAK,QACLN,MAAOmG,EACP1F,YAAY,iBACZE,SAAU+G,IAGZ,cAACrH,EAAA,EAAD,CACEE,MAAM,WACNG,KAAK,WACLJ,KAAK,WACLN,MAAOqG,EACP5F,YAAY,oBACZE,SAAU+G,IAGd,cAACS,EAAA,EAAD,CAAQnH,KAAM,SAAUN,KAAM,SAAUO,MAAO,eCtGjE,IAYemH,EAZG,WAEd,OACE,qBAAK/J,UAAU,MAAf,SACE,cAACT,EAAA,EAAD,CAASC,MAAM,QAAf,SACI,cAACoI,EAAD","file":"static/js/login-page.efc5c60c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './Section.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport classNames from 'classnames';\n\n\nexport default function Section({ title, children, appear, styles}) {\n  const style = [styles === 'phonebook' ? s.titlePhonebook : s.titleContacts];\n\n  \n  return (\n    <section className={s.section}>\n      <CSSTransition  in={true} appear={appear} timeout ={500} classNames={s} unmountOnExit>\n        {title && <h2 className={classNames(style.join(' '))}>{title}</h2>}\n      </CSSTransition>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__11338\",\"titlePhonebook\":\"Section_titlePhonebook__ZhPyl\",\"titleContacts\":\"Section_titleContacts__1Xbwv\",\"appear\":\"Section_appear__19OBS\",\"appearActive\":\"Section_appearActive__32mQg\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import PropTypes from 'prop-types';\nimport s from './Input.module.css';\n\nfunction Input({\n  name,\n  label,\n  value,\n  id,\n  placeholder,\n  type,\n  onChange,\n  pattern,\n}) {\n  return (\n    <label htmlFor={id} className={s.label}>\n      {label}\n      <input\n        type={type}\n        name={name}\n        value={value}\n        id={id}\n        placeholder={placeholder}\n        onChange={onChange}\n        className={s.input}\n        pattern={pattern}\n      />\n    </label>\n  );\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  pattern: PropTypes.string,\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__3dWPf\",\"input\":\"Input_input__5GLC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeNotification_enter__3AC-Z\",\"enterActive\":\"fadeNotification_enterActive__2d6TU\",\"exit\":\"fadeNotification_exit__1hvV_\",\"exitActive\":\"fadeNotification_exitActive__16VdN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2-3al\",\"blueColor\":\"Notification_blueColor__2j6YI\",\"redColor\":\"Notification_redColor__1iFgN\"};","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default function Notification({ text, color }) {\r\n  const blueColor = s.blueColor;\r\n  const redColor = s.redColor;\r\n\r\n  const style = [s.notification];\r\n\r\n  if (color === 'red') {\r\n    style.push(redColor);\r\n  }\r\n\r\n  if (color === 'blue') {\r\n    style.push(blueColor);\r\n  }\r\n\r\n  return (\r\n    <p className={classNames(style.join(' '))}>\r\n      {text}\r\n    </p>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string,\r\n};","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    ;\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","export default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__2PN-X\"};","import React, { useState, useCallback } from 'react';\r\nimport Input from '../common/Input/Input';\r\nimport Button from '../common/Button/Button';\r\nimport s from './LoginForm.module.css';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport fadeNotification from '../../fadeNotification.module.css';\r\nimport Notification from '../Notification';\r\nimport { authSelectors, authOperations, authActions } from '../../redux/auth';\r\n\r\nexport default function LoginForm() {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const error = useSelector(authSelectors.getErrorMessage);\r\n  const errorStatus = useSelector(authSelectors.getErrorStatus);\r\n\r\n\r\n  if (errorStatus) {\r\n       setTimeout(() => {\r\n       dispatch(authActions.errorStatus(false))\r\n      }, 3000)\r\n  }\r\n  \r\n  const onLogin = useCallback((state) => dispatch(authOperations.logIn(state)), [dispatch]);\r\n  \r\n  \r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    \r\n    if (name === 'email') {\r\n     setEmail(value);\r\n      return\r\n    }\r\n\r\n    if (name === 'password') {\r\n      setPassword(value);\r\n      return\r\n    }\r\n    }\r\n\r\n   const handleSubmit = e => {\r\n     e.preventDefault();\r\n  \r\n\r\n     if (email === '' && password === '') {\r\n       visibleMessage('Please enter email and password!');\r\n      return;\r\n     }\r\n\r\n    if (email === '') {\r\n      visibleMessage('Please enter email!');\r\n      return;\r\n    };\r\n    if (password === '') {\r\n      visibleMessage('Please enter password!');\r\n      return;\r\n     };\r\n\r\n      onLogin({ email, password })\r\n      \r\n      setEmail('');\r\n     setPassword('');\r\n    \r\n    \r\n  }\r\n\r\n    const visibleMessage = (stringMessage) => {\r\n    setMessage(stringMessage);\r\n      setAlert(true);\r\n      setTimeout(() => {\r\n        setAlert(false);\r\n      }, 3000)\r\n      setTimeout(() => {\r\n        setMessage('');\r\n      }, 4000)\r\n  }\r\n    \r\n\r\n  return (\r\n        <>\r\n               <CSSTransition in={alert || errorStatus} timeout={1000} classNames={fadeNotification} unmountOnExit>\r\n                   <Notification text={message === '' ? error : message} color=\"red\"/>\r\n                </CSSTransition>\r\n                <form onSubmit={handleSubmit} className={s.form}>\r\n                \r\n                    <Input\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      placeholder=\"Enter email...\"\r\n                      onChange={handleInputChange}\r\n                    />\r\n\r\n                    <Input\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      value={password}\r\n                      placeholder=\"Enter password...\"\r\n                      onChange={handleInputChange}\r\n                    />\r\n\r\n                  <Button text={'Log in'} type={'submit'} color={'blue'} />\r\n                </form>\r\n          </>\r\n        )\r\n    }\r\n","import { React } from 'react';\r\nimport Section from '../../components/common/Section/Section';\r\nimport LoginForm from '../../components/LoginForm';\r\n\r\n\r\nconst LoginPage = () =>  {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Section title=\"Login\">\r\n            <LoginForm/>\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default LoginPage;"],"sourceRoot":""}