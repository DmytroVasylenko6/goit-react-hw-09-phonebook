{"version":3,"sources":["components/common/Section/Section.js","components/common/Section/Section.module.css","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","pages/HomePage/Homepage.module.css","pages/HomePage/HomePage.js"],"names":["Section","title","children","appear","style","styles","s","titlePhonebook","titleContacts","className","section","in","timeout","classNames","unmountOnExit","join","module","exports","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","node","classes","split","forEach","c","element","classList","remove","setAttribute","baseVal","CSSTransition","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","appliedClasses","enter","exit","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","props","onEntering","_this$resolveArgument2","type","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","nodeRef","current","getClassNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_inheritsLoose","_proto","prototype","phase","scrollTop","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","_objectWithoutPropertiesLoose","React","createElement","Transition","_extends","Component","defaultProps","propTypes","HomePage","description"],"mappings":"yOAMe,SAASA,EAAT,GAAsD,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAC3CC,EAAQ,CAAY,cADwC,EAATC,OACjBC,IAAEC,eAAiBD,IAAEE,eAG7D,OACE,0BAASC,UAAWH,IAAEI,QAAtB,UACE,cAAC,IAAD,CAAgBC,IAAI,EAAMR,OAAQA,EAAQS,QAAU,IAAKC,WAAYP,IAAGQ,eAAa,EAArF,SACGb,GAAS,oBAAIQ,UAAWI,IAAWT,EAAMW,KAAK,MAArC,SAA6Cd,MAExDC,O,oBCdPc,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,cAAgB,+BAA+B,OAAS,wBAAwB,aAAe,gC,iECDrM,SAASC,EAAiBC,EAAWC,GACnC,OAAOD,EAAUE,QAAQ,IAAIC,OAAO,UAAYF,EAAgB,YAAa,KAAM,MAAMC,QAAQ,OAAQ,KAAKA,QAAQ,aAAc,I,6BCelIE,EAAc,SAAqBC,EAAMC,GAC3C,OAAOD,GAAQC,GAAWA,EAAQC,MAAM,KAAKC,SAAQ,SAAUC,GAC7D,ODdyCnB,ECcbmB,QDdIC,ECcVL,GDbZM,UACVD,EAAQC,UAAUC,OAAOtB,GACa,kBAAtBoB,EAAQpB,UAExBoB,EAAQpB,UAAYS,EAAiBW,EAAQpB,UAAWA,GAExDoB,EAAQG,aAAa,QAASd,EAAiBW,EAAQpB,WAAaoB,EAAQpB,UAAUwB,SAAW,GAAIxB,KAP1F,IAAqBoB,EAASpB,MCwFzCyB,EAA6B,SAAUC,GAGzC,SAASD,IAGP,IAFA,IAAIE,EAEKC,EAAOC,UAAUC,OAAQC,EAAO,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC/EF,EAAKE,GAAQJ,UAAUI,GAgHzB,OA7GAN,EAAQD,EAAiBQ,KAAKC,MAAMT,EAAkB,CAACU,MAAMC,OAAON,KAAUK,MACxEE,eAAiB,CACrB5C,OAAQ,GACR6C,MAAO,GACPC,KAAM,IAGRb,EAAMc,QAAU,SAAUC,EAAWC,GACnC,IAAIC,EAAwBjB,EAAMkB,iBAAiBH,EAAWC,GAC1D5B,EAAO6B,EAAsB,GAC7BE,EAAYF,EAAsB,GAEtCjB,EAAMoB,cAAchC,EAAM,QAE1BY,EAAMqB,SAASjC,EAAM+B,EAAY,SAAW,QAAS,QAEjDnB,EAAMsB,MAAMR,SACdd,EAAMsB,MAAMR,QAAQC,EAAWC,IAInChB,EAAMuB,WAAa,SAAUR,EAAWC,GACtC,IAAIQ,EAAyBxB,EAAMkB,iBAAiBH,EAAWC,GAC3D5B,EAAOoC,EAAuB,GAG9BC,EAFYD,EAAuB,GAEhB,SAAW,QAElCxB,EAAMqB,SAASjC,EAAMqC,EAAM,UAEvBzB,EAAMsB,MAAMC,YACdvB,EAAMsB,MAAMC,WAAWR,EAAWC,IAItChB,EAAM0B,UAAY,SAAUX,EAAWC,GACrC,IAAIW,EAAyB3B,EAAMkB,iBAAiBH,EAAWC,GAC3D5B,EAAOuC,EAAuB,GAG9BF,EAFYE,EAAuB,GAEhB,SAAW,QAElC3B,EAAMoB,cAAchC,EAAMqC,GAE1BzB,EAAMqB,SAASjC,EAAMqC,EAAM,QAEvBzB,EAAMsB,MAAMI,WACd1B,EAAMsB,MAAMI,UAAUX,EAAWC,IAIrChB,EAAM4B,OAAS,SAAUb,GACvB,IACI3B,EADyBY,EAAMkB,iBAAiBH,GAClB,GAElCf,EAAMoB,cAAchC,EAAM,UAE1BY,EAAMoB,cAAchC,EAAM,SAE1BY,EAAMqB,SAASjC,EAAM,OAAQ,QAEzBY,EAAMsB,MAAMM,QACd5B,EAAMsB,MAAMM,OAAOb,IAIvBf,EAAM6B,UAAY,SAAUd,GAC1B,IACI3B,EADyBY,EAAMkB,iBAAiBH,GAClB,GAElCf,EAAMqB,SAASjC,EAAM,OAAQ,UAEzBY,EAAMsB,MAAMO,WACd7B,EAAMsB,MAAMO,UAAUd,IAI1Bf,EAAM8B,SAAW,SAAUf,GACzB,IACI3B,EADyBY,EAAMkB,iBAAiBH,GAClB,GAElCf,EAAMoB,cAAchC,EAAM,QAE1BY,EAAMqB,SAASjC,EAAM,OAAQ,QAEzBY,EAAMsB,MAAMQ,UACd9B,EAAMsB,MAAMQ,SAASf,IAIzBf,EAAMkB,iBAAmB,SAAUH,EAAWC,GAC5C,OAAOhB,EAAMsB,MAAMS,QAAU,CAAC/B,EAAMsB,MAAMS,QAAQC,QAASjB,GACzD,CAACA,EAAWC,IAGhBhB,EAAMiC,cAAgB,SAAUR,GAC9B,IAAIhD,EAAauB,EAAMsB,MAAM7C,WACzByD,EAA2C,kBAAfzD,EAE5B0D,EAAgBD,EAAqB,IAD5BA,GAAsBzD,EAAaA,EAAa,IAAM,IACZgD,EAAOhD,EAAWgD,GAGzE,MAAO,CACLU,cAAeA,EACfC,gBAJoBF,EAAqBC,EAAgB,UAAY1D,EAAWgD,EAAO,UAKvFY,cAJkBH,EAAqBC,EAAgB,QAAU1D,EAAWgD,EAAO,UAQhFzB,EAtHTsC,YAAexC,EAAeC,GAyH9B,IAAIwC,EAASzC,EAAc0C,UA6D3B,OA3DAD,EAAOlB,SAAW,SAAkBjC,EAAMqC,EAAMgB,GAC9C,IAAIpE,EAAYoC,KAAKwB,cAAcR,GAAMgB,EAAQ,aAG7CJ,EADsB5B,KAAKwB,cAAc,SACLI,cAE3B,WAATZ,GAA+B,SAAVgB,GAAoBJ,IAC3ChE,GAAa,IAAMgE,GAKP,WAAVI,GAEFrD,GAAQA,EAAKsD,UAGXrE,IACFoC,KAAKE,eAAec,GAAMgB,GAASpE,EAhOzB,SAAkBe,EAAMC,GAC/BD,GAAQC,GAAWA,EAAQC,MAAM,KAAKC,SAAQ,SAAUC,GAC7D,OCXsCnB,EDWbmB,QCXIC,EDWVL,GCVTM,UAAWD,EAAQC,UAAUiD,IAAItE,GCFhC,SAAkBoB,EAASpB,GACxC,OAAIoB,EAAQC,YAAoBrB,GAAaoB,EAAQC,UAAUkD,SAASvE,IACkC,KAAlG,KAAOoB,EAAQpB,UAAUwB,SAAWJ,EAAQpB,WAAa,KAAKwE,QAAQ,IAAMxE,EAAY,KDA9ByE,CAASrD,EAASpB,KAA6C,kBAAtBoB,EAAQpB,UAAwBoB,EAAQpB,UAAYoB,EAAQpB,UAAY,IAAMA,EAAeoB,EAAQG,aAAa,SAAUH,EAAQpB,WAAaoB,EAAQpB,UAAUwB,SAAW,IAAM,IAAMxB,KADxR,IAAkBoB,EAASpB,KD2OpC0E,CAAU3D,EAAMf,KAIpBkE,EAAOnB,cAAgB,SAAuBhC,EAAMqC,GAClD,IAAIuB,EAAwBvC,KAAKE,eAAec,GAC5CU,EAAgBa,EAAsBC,KACtCb,EAAkBY,EAAsBE,OACxCb,EAAgBW,EAAsBG,KAC1C1C,KAAKE,eAAec,GAAQ,GAExBU,GACFhD,EAAYC,EAAM+C,GAGhBC,GACFjD,EAAYC,EAAMgD,GAGhBC,GACFlD,EAAYC,EAAMiD,IAItBE,EAAOa,OAAS,WACd,IAAIC,EAAc5C,KAAKa,MAEnBA,GADI+B,EAAY5E,WACR6E,YAA8BD,EAAa,CAAC,gBAExD,OAAoBE,IAAMC,cAAcC,IAAYC,YAAS,GAAIpC,EAAO,CACtER,QAASL,KAAKK,QACdY,UAAWjB,KAAKiB,UAChBH,WAAYd,KAAKc,WACjBK,OAAQnB,KAAKmB,OACbC,UAAWpB,KAAKoB,UAChBC,SAAUrB,KAAKqB,aAIZhC,EAvLwB,CAwL/ByD,IAAMI,WAER7D,EAAc8D,aAAe,CAC3BnF,WAAY,IAEdqB,EAAc+D,UAiIT,GACU/D,O,oBG1ZflB,EAAOC,QAAU,CAAC,YAAc,gC,6HCgBjBiF,EAZE,WAEb,OACE,qBAAKzF,UAAU,MAAf,SACE,cAACT,EAAA,EAAD,CAASC,MAAM,YAAf,SACE,mBAAGQ,UAAWH,IAAE6F,YAAhB","file":"static/js/home-page.b19216dc.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './Section.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport classNames from 'classnames';\n\n\nexport default function Section({ title, children, appear, styles}) {\n  const style = [styles === 'phonebook' ? s.titlePhonebook : s.titleContacts];\n\n  \n  return (\n    <section className={s.section}>\n      <CSSTransition  in={true} appear={appear} timeout ={500} classNames={s} unmountOnExit>\n        {title && <h2 className={classNames(style.join(' '))}>{title}</h2>}\n      </CSSTransition>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__11338\",\"titlePhonebook\":\"Section_titlePhonebook__ZhPyl\",\"titleContacts\":\"Section_titleContacts__1Xbwv\",\"appear\":\"Section_appear__19OBS\",\"appearActive\":\"Section_appearActive__32mQg\"};","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    ;\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","export default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Homepage_description__1lwhi\"};","import { React} from 'react';\r\nimport Section from '../../components/common/Section/Section';\r\nimport s from './Homepage.module.css';\r\n\r\n\r\nconst HomePage = () =>  {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Section title=\"PHONEBOOK\">\r\n          <p className={s.description}>You need to register to continue using this application.</p>\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default HomePage;"],"sourceRoot":""}