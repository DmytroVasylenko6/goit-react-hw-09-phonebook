{"version":3,"sources":["components/common/Section/Section.js","components/common/Section/Section.module.css","components/common/Input/Input.js","components/common/Input/Input.module.css","fadeNotification.module.css","components/Notification/Notification.module.css","components/Notification/Notification.js","components/common/Container/Container.js","components/common/Container/Container.module.css","components/ContactsList/ContactsList.module.css","components/Form/Form.module.css","fadeFindContacts.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactsList/ContactsList.js","components/Form/Form.js","pages/ContactsPage/ContactsPage.js"],"names":["Section","title","children","appear","style","styles","s","titlePhonebook","titleContacts","className","section","in","timeout","classNames","unmountOnExit","join","module","exports","Input","name","label","value","id","placeholder","type","onChange","pattern","htmlFor","input","Notification","text","color","blueColor","redColor","notification","push","Container","container","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizeFilter","toLowerCase","includes","ContactsList","useSelector","dispatch","useDispatch","onDeleteContact","useCallback","deleteContactRequest","delete","then","deleteContactSuccess","catch","error","deleteContactError","contactDelete","TransitionGroup","component","list","map","number","CSSTransition","item","contactsText","contactName","Button","listener","Form","useState","setName","setNumber","message","setMessage","alert","setAlert","addContact","newContact","contact","addContactRequest","post","data","addContactSuccess","addContactError","contactAdd","inputNameId","shortid","generate","inputNumberId","handleInputChange","event","currentTarget","handleSubmitForm","some","visibleMessage","reset","stringMessage","setTimeout","fadeNotification","onSubmit","e","preventDefault","form","ContactsPage","useEffect","parseContactRequest","get","parseContactSuccess","parseContactError","inputFindId","length","fadeFindContacts","filterValue","contactsAction","display","textAlign"],"mappings":"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","file":"static/js/contact-page.78c92d68.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './Section.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport classNames from 'classnames';\n\n\nexport default function Section({ title, children, appear, styles}) {\n  const style = [styles === 'phonebook' ? s.titlePhonebook : s.titleContacts];\n\n  \n  return (\n    <section className={s.section}>\n      <CSSTransition  in={true} appear={appear} timeout ={500} classNames={s} unmountOnExit>\n        {title && <h2 className={classNames(style.join(' '))}>{title}</h2>}\n      </CSSTransition>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__11338\",\"titlePhonebook\":\"Section_titlePhonebook__ZhPyl\",\"titleContacts\":\"Section_titleContacts__1Xbwv\",\"appear\":\"Section_appear__19OBS\",\"appearActive\":\"Section_appearActive__32mQg\"};","import PropTypes from 'prop-types';\nimport s from './Input.module.css';\n\nfunction Input({\n  name,\n  label,\n  value,\n  id,\n  placeholder,\n  type,\n  onChange,\n  pattern,\n}) {\n  return (\n    <label htmlFor={id} className={s.label}>\n      {label}\n      <input\n        type={type}\n        name={name}\n        value={value}\n        id={id}\n        placeholder={placeholder}\n        onChange={onChange}\n        className={s.input}\n        pattern={pattern}\n      />\n    </label>\n  );\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  pattern: PropTypes.string,\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__3dWPf\",\"input\":\"Input_input__5GLC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeNotification_enter__3AC-Z\",\"enterActive\":\"fadeNotification_enterActive__2d6TU\",\"exit\":\"fadeNotification_exit__1hvV_\",\"exitActive\":\"fadeNotification_exitActive__16VdN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2-3al\",\"blueColor\":\"Notification_blueColor__2j6YI\",\"redColor\":\"Notification_redColor__1iFgN\"};","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default function Notification({ text, color }) {\r\n  const blueColor = s.blueColor;\r\n  const redColor = s.redColor;\r\n\r\n  const style = [s.notification];\r\n\r\n  if (color === 'red') {\r\n    style.push(redColor);\r\n  }\r\n\r\n  if (color === 'blue') {\r\n    style.push(blueColor);\r\n  }\r\n\r\n  return (\r\n    <p className={classNames(style.join(' '))}>\r\n      {text}\r\n    </p>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string,\r\n};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3F_OI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__1J12K\",\"item\":\"ContactsList_item__20qBq\",\"contactsText\":\"ContactsList_contactsText__2834O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3eKsB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeFindContacts_enter__2Qnym\",\"enterActive\":\"fadeFindContacts_enterActive__2dytM\",\"exit\":\"fadeFindContacts_exit__17Z2x\",\"exitActive\":\"fadeFindContacts_exitActive__3rkTx\"};","import axios from 'axios';\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    parseContactRequest,\r\n    parseContactSuccess,\r\n    parseContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const contactsParse = contacts => dispatch => {\r\n    dispatch(parseContactRequest());\r\n    \r\n        axios.get('/contacts')\r\n        .then(({ data }) => dispatch(parseContactSuccess(data)))\r\n        .catch(error => dispatch(parseContactError(error)));\r\n}\r\n\r\nexport const contactAdd = newContact => dispatch => {\r\n    const contact = {\r\n        name: newContact.name,\r\n        number: newContact.number,\r\n    }\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios.post('/contacts', contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n\r\n};\r\n\r\nexport const contactDelete = id => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios.delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteContactSuccess(id)))\r\n        .catch(error => dispatch(deleteContactError(error)))\r\n}\r\n\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n    [getContacts, getFilter],\r\n    (contacts, filter) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n    })\r\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {contactDelete} from '../../redux/contacts/contacts-operations';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\nimport './fade.css'\nimport Button from '../common/Button/Button';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\n\nexport default function ContactsList() {\n  const contacts = useSelector(getVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  const onDeleteContact = useCallback((id) => dispatch(contactDelete(id)), [dispatch]);\n \n\n  return (\n    <>\n      <TransitionGroup component=\"ul\" className={s.list}>\n        \n        {contacts.map(({ name, number, id }) => {\n          return (\n            <CSSTransition key={id} timeout={250} classNames=\"e-fade\" appear={true}>\n            <li id={id}  className={s.item}>\n              <p className={s.contactsText}>\n                <span className={s.contactName}>{name}</span> <span>{number}</span> \n              </p>\n              <Button\n                text={'Delete'}\n                listener={() => onDeleteContact(id)}\n                color=\"red\"\n              />\n              </li>\n              </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n    </>\n  );\n }\n\n\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n\n","import React, { useState, useCallback } from 'react';\nimport shortid from 'shortid';\nimport Input from '../common/Input/Input';\nimport Button from '../common/Button/Button';\nimport s from './Form.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport fadeNotification from '../../fadeNotification.module.css';\nimport Notification from '../Notification';\nimport { useSelector, useDispatch} from 'react-redux';\nimport { contactAdd } from '../../redux/contacts/contacts-operations';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\n\nexport default function Form() {\n\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [message, setMessage] = useState('');\n  const [alert, setAlert] = useState(null);\n\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const addContact = useCallback((newContact) => dispatch(contactAdd(newContact)), [dispatch]);\n\n  const inputNameId = shortid.generate();\n  const inputNumberId = shortid.generate();\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    if (name === 'name') {\n      setName(value);\n      return\n    }\n\n    if (name === 'number') {\n      setNumber(value);\n      return\n    }\n\n  };\n\n   const handleAddContact = e => {\n    e.preventDefault();\n     handleSubmitForm(name, number);\n  };\n\n  const handleSubmitForm = (name, number) => {\n \n    if (name === '') {\n      visibleMessage('Please enter contact name!');\n      return;\n    };\n    if (number === '') {\n      visibleMessage('Please enter contact phone number!');\n      return;\n    };\n    \n    const hasContact = contacts.some(\n      contact => contact.name === name,\n    );\n\n    if (hasContact) {\n     visibleMessage(`${name} is already in contacts!`);\n    } else {\n     addContact({name, number});\n    };\n\n     reset();\n  };\n  \n  \n  const visibleMessage = (stringMessage) => {\n    setMessage(stringMessage);\n    setAlert(true);\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000)\n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n\n    return ( <>\n      <CSSTransition in={alert} timeout={1000} classNames={fadeNotification} unmountOnExit>\n        <Notification text={message} color=\"red\"/>\n      </CSSTransition>\n      <form onSubmit={handleAddContact} className={s.form}>\n        <Input\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          id={inputNameId}\n          placeholder=\"Enter name...\"\n          onChange={handleInputChange}\n        />\n\n        <Input\n          label=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          id={inputNumberId}\n          placeholder=\"+380990101010\"\n          onChange={handleInputChange}\n          pattern=\"^\\+?[0-9]{10,15}$\"\n        />\n\n        <Button text={'Add contact'} type={'submit'} color={'blue'} />\n      </form>\n      </>\n    );\n  }\n\n","import React, { useEffect } from 'react';\r\nimport Section from '../../components/common/Section/Section';\r\nimport ContactsList from '../../components/ContactsList/ContactsList';\r\nimport Form from '../../components/Form/Form';\r\nimport shortid from 'shortid';\r\nimport Input from '../../components/common/Input/Input';\r\nimport Container from '../../components/common/Container/Container';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport fadeFindContacts from '../../fadeFindContacts.module.css';\r\nimport * as contactsAction from '../../redux/contacts/contacts-actions';\r\nimport { contactsParse } from '../../redux/contacts/contacts-operations';\r\nimport { getFilter, getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\n\r\n\r\nexport default function ContactsPage() {\r\n\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const filter = useSelector(getFilter);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsParse());\r\n  }, [dispatch]);\r\n\r\n\r\n  const inputFindId = shortid.generate();\r\n\r\n    const  handleFindChange = event => {\r\n    const filterValue = event.currentTarget;\r\n   dispatch(contactsAction.contactFilter(filterValue.value));\r\n  };\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"PhoneBook\" appear={true} styles=\"phonebook\">\r\n          <Form />\r\n        </Section>\r\n    \r\n        <Section title=\"Contacts\" >\r\n          \r\n           \r\n          <CSSTransition in={contacts.length > 1} timeout={250} classNames={fadeFindContacts} unmountOnExit>\r\n            <Container>\r\n              <Input\r\n                label=\"Find contacts by name\"\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={filter}\r\n                id={inputFindId}\r\n                placeholder=\"Find...\"\r\n                onChange={handleFindChange}\r\n              />\r\n            </Container>\r\n          </CSSTransition>\r\n          \r\n\r\n          {contacts.length === 0 ? (\r\n            <span style={{ display: 'block', textAlign: 'center' }}>\r\n              No contacts\r\n            </span>\r\n          ) : (\r\n            <ContactsList\r\n              contacts={contacts}\r\n            />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}