{"version":3,"sources":["components/common/Section/Section.js","components/common/Section/Section.module.css","components/common/Container/Container.js","components/common/Container/Container.module.css","pages/CurrencyPage/CurrencyPage.module.css","components/CurrencyFormConverter/CurrencyFormConverter.module.css","opacityEffect.module.css","utils/rounded.js","components/CurrencyFormConverter/CurrencyFormConverter.js","pages/CurrencyPage/CurrencyPage.js"],"names":["Section","title","children","appear","style","styles","s","titlePhonebook","titleContacts","className","section","in","timeout","classNames","unmountOnExit","join","module","exports","Container","container","rounded","number","toFixed","Form","currency","useSelector","currencySelectors","getCurrecy","baseCurrency","getBaseCurrency","useState","baseCurrenc","setBaseCurrency","convertCurrency","setConvertCurrency","converterResult","setConverterResult","handleChangeSelect","e","target","id","value","onSubmit","preventDefault","inputValue","currentTarget","base","convert","baseValue","convertValue","item","convertForm","TextField","type","label","variant","Select","labelId","native","onChange","Object","keys","map","textTo","margin","Button","text","color","CSSTransition","opacityEffect","CurrencyPage","currencyContainer","currencyItem","currencySymbol","currencyValue","USD","UAH","EUR"],"mappings":"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","file":"static/js/currency-page.8471004f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './Section.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport classNames from 'classnames';\n\n\nexport default function Section({ title, children, appear, styles}) {\n  const style = [styles === 'phonebook' ? s.titlePhonebook : s.titleContacts];\n\n  \n  return (\n    <section className={s.section}>\n      <CSSTransition  in={true} appear={appear} timeout ={500} classNames={s} unmountOnExit>\n        {title && <h2 className={classNames(style.join(' '))}>{title}</h2>}\n      </CSSTransition>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__11338\",\"titlePhonebook\":\"Section_titlePhonebook__ZhPyl\",\"titleContacts\":\"Section_titleContacts__1Xbwv\",\"appear\":\"Section_appear__19OBS\",\"appearActive\":\"Section_appearActive__32mQg\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3F_OI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currencyContainer\":\"CurrencyPage_currencyContainer__1rFJj\",\"currencyItem\":\"CurrencyPage_currencyItem__2kEGi\",\"currencySymbol\":\"CurrencyPage_currencySymbol__3HWKH\",\"currencyValue\":\"CurrencyPage_currencyValue__hGgbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"convertForm\":\"CurrencyFormConverter_convertForm__2ZCkA\",\"textTo\":\"CurrencyFormConverter_textTo__1i1E2\",\"converterResult\":\"CurrencyFormConverter_converterResult__2yKIT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"opacityEffect_enter__36a98\",\"enterActive\":\"opacityEffect_enterActive__1oHfs\",\"exit\":\"opacityEffect_exit__NLoHs\",\"exitActive\":\"opacityEffect_exitActive__3EqST\"};","export default function rounded(number){\r\n    return +number.toFixed(4);\r\n}\r\n\r\n","import s from './CurrencyFormConverter.module.css';\r\nimport React, { useState } from 'react';\r\nimport Button from '../common/Button/Button';\r\nimport Container from '../common/Container/Container';\r\nimport { CSSTransition } from 'react-transition-group';\r\n// import fadeNotification from '../../fadeNotification.module.css';\r\nimport opacityEffect from '../../opacityEffect.module.css';\r\n// import Notification from '../Notification';\r\nimport { useSelector} from 'react-redux';\r\nimport { currencySelectors } from '../../redux/currency';\r\nimport { Select, TextField } from '@material-ui/core';\r\nimport rounded from '../../utils/rounded';\r\n\r\n\r\nexport default function Form() {\r\n\r\nconst currency = useSelector(currencySelectors.getCurrecy);\r\nconst baseCurrency = useSelector(currencySelectors.getBaseCurrency);\r\n\r\nconst [ baseCurrenc, setBaseCurrency] = useState('');\r\nconst [ convertCurrency, setConvertCurrency] = useState('');\r\nconst [ converterResult, setConverterResult] = useState('');    \r\n// const [ message, setMessage] = useState('');\r\n// const [ alert, setAlert] = useState(null);\r\n\r\n    \r\n    const handleChangeSelect = (e) => {\r\n        if (e.target.id === \"select-baseCurrency\") {\r\n            setBaseCurrency(e.target.value);\r\n        }\r\n        if (e.target.id === \"select-convertCurrency\") {\r\n            setConvertCurrency(e.target.value);\r\n        }\r\n\r\n    }\r\n\r\n   const handleAddContact = e => {\r\n     e.preventDefault();\r\n     setConverterResult(null);\r\n       const inputValue = e.currentTarget[0].value;\r\n       const base =  e.currentTarget[2].value;\r\n       const convert = e.currentTarget[4].value;\r\n     \r\n       setConvertCurrency(convert);\r\n\r\n       let baseValue = null;\r\n       let convertValue = null;\r\n\r\n       for (const item in currency) {\r\n        if (item === base) {\r\n           baseValue = currency[item];\r\n           }\r\n           \r\n        if (item === convert) {\r\n          convertValue = currency[item];\r\n        }\r\n       }\r\n       \r\n       let result = (inputValue * convertValue * 100) / (baseValue * 100)\r\n      setConverterResult(rounded(result))\r\n  };\r\n\r\n  \r\n  \r\n  // const visibleMessage = (stringMessage) => {\r\n  //   setMessage(stringMessage);\r\n  //   setAlert(true);\r\n  //     setTimeout(() => {\r\n  //       setAlert(false);\r\n  //     }, 3000)\r\n  // }\r\n\r\n\r\n\r\n    return ( <>\r\n      {/* <CSSTransition in={alert} timeout={1000} classNames={fadeNotification} unmountOnExit>\r\n        <Notification text={message} color=\"red\"/>\r\n      </CSSTransition> */}\r\n      <form onSubmit={handleAddContact} className={s.convertForm}>\r\n        <TextField type=\"number\" id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\r\n         <Select variant=\"outlined\" labelId=\"label\" id=\"select-baseCurrency\" native={true}  onChange={handleChangeSelect} value={baseCurrenc === null ? baseCurrency : baseCurrenc}>\r\n        \r\n              {currency !== null ? (\r\n                Object.keys(currency).map((item) => {\r\n                 return(<option key={item} value={item}>{item}</option>)\r\n                })\r\n                ) : (\r\n                  <option key=\"1\" value=\"\"></option>\r\n                )}\r\n       \r\n            </Select>\r\n            <span className={s.textTo}>to</span>\r\n             <Select margin=\"dense\"   variant=\"outlined\" labelId=\"label\" id=\"select-convertCurrency\" native={true}  onChange={handleChangeSelect} value={convertCurrency === null ? baseCurrency : convertCurrency}>\r\n        \r\n              {currency !== null ? (\r\n                Object.keys(currency).map((item) => {\r\n                 return(<option key={item} value={item}>{item}</option>)\r\n                })\r\n                ) : (\r\n                  <option key=\"1\" value=\"\"></option>\r\n                )}\r\n       \r\n            </Select>\r\n       \r\n        <Button text={'Convert'} type={'submit'} color={'blue'} />\r\n        </form>\r\n      < Container>\r\n        <CSSTransition in={converterResult !== ''} timeout={1000} classNames={opacityEffect} unmountOnExit>\r\n          <span className={s.converterResult}>{`${convertCurrency}: ${converterResult}`}</span>\r\n        </CSSTransition>\r\n      </Container>\r\n        \r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n","import Section from '../../components/common/Section/Section';\r\nimport s from './CurrencyPage.module.css';\r\nimport { useSelector} from 'react-redux';\r\nimport { currencySelectors} from '../../redux/currency';\r\nimport CurrencyFormConverter from '../../components/CurrencyFormConverter';\r\nimport rounded from '../../utils/rounded';\r\n\r\nexport default function CurrencyPage() {\r\n    \r\n    const currency = useSelector(currencySelectors.getCurrecy);\r\n\r\n    return (\r\n        <>\r\n            <div className={s.currencyContainer}>\r\n                <div className={s.currencyItem}><span className={s.currencySymbol}>USD: </span><span className={s.currencyValue}> {currency ?  rounded(currency.USD) : 0}</span></div>\r\n                <div className={s.currencyItem}><span className={s.currencySymbol}>UAH: </span><span className={s.currencyValue}> {currency ?  rounded(currency.UAH) : 0}</span></div>\r\n                <div className={s.currencyItem}><span className={s.currencySymbol}>EUR: </span><span className={s.currencyValue}> {currency ?  rounded(currency.EUR) : 0}</span></div>\r\n            </div>\r\n\r\n            <Section title=\"Currency converter\" appear={true} styles=\"phonebook\">\r\n                <CurrencyFormConverter/>\r\n            </Section>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n"],"sourceRoot":""}