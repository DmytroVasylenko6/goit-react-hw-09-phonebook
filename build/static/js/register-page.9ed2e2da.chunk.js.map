{"version":3,"sources":["components/RegisterForm/RegisterForm.module.css","components/RegisterForm/RegisterForm.js","pages/RegisterPage/RegisterPage.js","components/common/Section/Section.js","components/common/Section/Section.module.css","components/common/Button/Button.js","components/common/Input/Input.js","components/common/Button/Button.module.css","components/common/Input/Input.module.css"],"names":["module","exports","RegisterForm","state","name","email","password","handleInputChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","onSubmit","className","s","form","Input","label","type","placeholder","onChange","Button","text","color","Component","mapDispatchToProps","authOperations","register","connect","RegisterPage","Section","title","children","appear","style","styles","titlePhonebook","titleContacts","section","in","timeout","classNames","unmountOnExit","join","listener","blueColor","redColor","button","push","onClick","id","pattern","htmlFor","input"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,6B,iMCMnBC,E,4MACFC,MAAQ,CACJC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGdC,kBAAoB,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MACnC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG5BE,aAAe,SAAAC,GACXA,EAAEC,iBAEJ,EAAKC,MAAMC,WAAW,EAAKZ,OAEzB,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,uDAGzC,IAAD,EAC6BU,KAAKb,MAA/BC,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,SAErB,OACI,8BACI,uBAAMW,SAAUD,KAAKL,aAAcO,UAAWC,IAAEC,KAAhD,UACI,cAACC,EAAA,EAAD,CACGC,MAAM,OACNC,KAAK,OACLnB,KAAK,OACLK,MAAOL,EACPoB,YAAY,gBACZC,SAAUT,KAAKT,oBAGlB,cAACc,EAAA,EAAD,CACEC,MAAM,QACNC,KAAK,QACLnB,KAAK,QACLK,MAAOJ,EACPmB,YAAY,iBACZC,SAAUT,KAAKT,oBAGjB,cAACc,EAAA,EAAD,CACEC,MAAM,WACNC,KAAK,WACLnB,KAAK,WACLK,MAAOH,EACPkB,YAAY,oBACZC,SAAUT,KAAKT,oBAGnB,cAACmB,EAAA,EAAD,CAAQC,KAAM,WAAYJ,KAAM,SAAUK,MAAO,kB,GApDxCC,aA6DrBC,EAAqB,CACzBf,WAAYgB,IAAeC,UAIdC,cAAQ,KAAMH,EAAdG,CAAkC/B,GCxDlCgC,EAZM,WAEjB,OACE,qBAAKhB,UAAU,MAAf,SACE,cAACiB,EAAA,EAAD,CAASC,MAAM,WAAf,SACE,cAAC,EAAD,U,wHCLK,SAASD,EAAT,GAAsD,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAC3CC,EAAQ,CAAY,cADwC,EAATC,OACjBrB,IAAEsB,eAAiBtB,IAAEuB,eAE7D,OACE,0BAASxB,UAAWC,IAAEwB,QAAtB,UACE,cAAC,IAAD,CAAeC,IAAI,EAAMN,OAAQA,EAAQO,QAAU,IAAKC,WAAY3B,IAAG4B,eAAa,EAApF,SACGX,GAAS,oBAAIlB,UAAW4B,IAAWP,EAAMS,KAAK,MAArC,SAA6CZ,MAExDC,O,mBCZPrC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,cAAgB,+BAA+B,OAAS,wBAAwB,aAAe,gC,+GCGtL,SAASyB,EAAT,GAAkD,IAAhCC,EAA+B,EAA/BA,KAAMsB,EAAyB,EAAzBA,SAAU1B,EAAe,EAAfA,KAAMK,EAAS,EAATA,MAC/CsB,EAAY/B,IAAE+B,UACdC,EAAWhC,IAAEgC,SAEbZ,EAAQ,CAACpB,IAAEiC,QAUjB,MARc,QAAVxB,GACFW,EAAMc,KAAKF,GAGC,SAAVvB,GACFW,EAAMc,KAAKH,GAIX,wBACEhC,UAAW4B,IAAWP,EAAMS,KAAK,MACjCzB,KAAMA,EACN+B,QAASL,EAHX,SAKGtB,M,4DCiBQN,IAtCf,YASI,IARFjB,EAQC,EARDA,KACAkB,EAOC,EAPDA,MACAb,EAMC,EANDA,MACA8C,EAKC,EALDA,GACA/B,EAIC,EAJDA,YACAD,EAGC,EAHDA,KACAE,EAEC,EAFDA,SACA+B,EACC,EADDA,QAEA,OACE,wBAAOC,QAASF,EAAIrC,UAAWC,IAAEG,MAAjC,UACGA,EACD,uBACEC,KAAMA,EACNnB,KAAMA,EACNK,MAAOA,EACP8C,GAAIA,EACJ/B,YAAaA,EACbC,SAAUA,EACVP,UAAWC,IAAEuC,MACbF,QAASA,S,mBCvBjBxD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,SAAW,2B,mBCAnGD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ","file":"static/js/register-page.9ed2e2da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterForm_form__3hQlE\"};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Input from '../common/Input/Input';\r\nimport Button from '../common/Button/Button';\r\nimport s from './RegisterForm.module.css';\r\nimport { authOperations } from '../../redux/auth';\r\n\r\nclass RegisterForm extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    };\r\n\r\n    handleInputChange = ({ target: { name, value } }) => {\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n \r\n      this.props.onRegister(this.state);\r\n      \r\n        this.setState({ name: '', email: '', password: '' });\r\n    }\r\n\r\n    render() {\r\n        const { name, email, password } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} className={s.form}>\r\n                    <Input\r\n                       label=\"Name\"\r\n                       type=\"text\"\r\n                       name=\"name\"\r\n                       value={name}\r\n                       placeholder=\"Enter name...\"\r\n                       onChange={this.handleInputChange}\r\n                     />\r\n\r\n                    <Input\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      placeholder=\"Enter email...\"\r\n                      onChange={this.handleInputChange}\r\n                    />\r\n\r\n                    <Input\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      value={password}\r\n                      placeholder=\"Enter password...\"\r\n                      onChange={this.handleInputChange}\r\n                    />\r\n\r\n                  <Button text={'Register'} type={'submit'} color={'blue'} />\r\n                </form>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterForm);","import { React } from 'react';\r\nimport Section from '../../components/common/Section/Section';\r\nimport RegisterForm from '../../components/RegisterForm';\r\n\r\n\r\nconst RegisterPage = () =>  {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Section title=\"Register\">\r\n          <RegisterForm />\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default RegisterPage;","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport classNames from 'classnames';\n\nexport default function Section({ title, children, appear, styles}) {\n  const style = [styles === 'phonebook' ? s.titlePhonebook : s.titleContacts];\n\n  return (\n    <section className={s.section}>\n      <CSSTransition in={true} appear={appear} timeout ={500} classNames={s} unmountOnExit>\n        {title && <h2 className={classNames(style.join(' '))}>{title}</h2>}\n      </CSSTransition>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__ATiRF\",\"titlePhonebook\":\"Section_titlePhonebook__3lztk\",\"titleContacts\":\"Section_titleContacts__3wluE\",\"appear\":\"Section_appear__BCUa5\",\"appearActive\":\"Section_appearActive__1BKte\"};","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\nimport classNames from 'classnames';\n\nexport default function Button({ text, listener, type, color }) {\n  const blueColor = s.blueColor;\n  const redColor = s.redColor;\n\n  const style = [s.button];\n\n  if (color === 'red') {\n    style.push(redColor);\n  }\n\n  if (color === 'blue') {\n    style.push(blueColor);\n  }\n\n  return (\n    <button\n      className={classNames(style.join(' '))}\n      type={type}\n      onClick={listener}\n    >\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  listener: PropTypes.func,\n  type: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport s from './Input.module.css';\n\nfunction Input({\n  name,\n  label,\n  value,\n  id,\n  placeholder,\n  type,\n  onChange,\n  pattern,\n}) {\n  return (\n    <label htmlFor={id} className={s.label}>\n      {label}\n      <input\n        type={type}\n        name={name}\n        value={value}\n        id={id}\n        placeholder={placeholder}\n        onChange={onChange}\n        className={s.input}\n        pattern={pattern}\n      />\n    </label>\n  );\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  pattern: PropTypes.string,\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2XMvd\",\"blueColor\":\"Button_blueColor__3NnMZ\",\"redColor\":\"Button_redColor__25D1o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__1XB8P\",\"input\":\"Input_input__1XThF\"};"],"sourceRoot":""}